service: import-service
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-central-1
  profile: personal
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    SQS_URL:
      Ref: catalogItemsQueue
    SNS_ARN:
      Ref: createProductTopic

  iamRoleStatements:
    - Effect: Allow
      Action: s3:ListBucket
      Resource:
      - arn:aws:s3:::node-in-aws-import-service
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::node-in-aws-import-service/*
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - arn:aws:sqs:eu-central-1:688730865701:catalogItemsQueue
    - Effect: Allow
      Action:
        - sns:*
      Resource:
        - arn:aws:sns:eu-central-1:688730865701:createProductTopic

plugins:
  - serverless-webpack
  - serverless-webpack-prisma

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSHighPricingSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: fruneen+high-pricing@gmail.com
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          pricingCategory:
            - High
    SNSLowPricingSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: fruneen+low-pricing@gmail.com
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          pricingCategory:
              - Low

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
     - httpApi:
         method: GET
         path: /import
         cors: true

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: node-in-aws-import-service
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:688730865701:catalogItemsQueue
          batchSize: 5
